name: CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Check deployment conditions
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" != "refs/heads/main" && ! "${{ github.ref }}" =~ ^refs/tags/v ]]; then
            echo "Deployment only runs on main branch or version tags"
            exit 1
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up environment variables
        run: |
          echo "DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/partykaraoke" >> $GITHUB_ENV
          echo "DOCKER_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

      - name: Verify image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          docker run --rm ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} npm test

      - name: Deploy to production
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        run: |
          echo "Starting deployment..."
          ssh $DEPLOY_USER@$DEPLOY_HOST 'bash -s' < scripts/deploy-production.sh
          echo "Deployment completed"

      - name: Verify deployment
        run: |
          ./scripts/verify-deployment.sh 